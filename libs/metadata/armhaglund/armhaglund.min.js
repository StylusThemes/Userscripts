// ==UserScript==
// @author       Journey Over
// @exclude      *
// ==UserLibrary==
// @name         @journeyover/armhaglund
// @description  Arm Haglund API client for fetching external IDs
// @license      MIT
// @version      1.0.0
// @homepageURL  https://github.com/StylusThemes/Userscripts
// ==/UserLibrary==
// @connect      arm.haglund.dev
// @grant        GM.xmlHttpRequest
// ==/UserScript==

this.ArmHaglund=class{constructor(config={}){this._config={debug:config.debug||false};this._debug=response=>{if(this._config.debug||response.status!==200){console.log(`${response.status}: ${response.finalUrl}`)}}}fetchIds(source,id){if(!source)throw new Error("A source is required");if(!id)throw new Error("An ID is required");return new Promise((resolve,reject)=>{GM.xmlHttpRequest({method:"GET",url:`https://arm.haglund.dev/api/v2/${source}?id=${id}`,timeout:15e3,onload:response=>{this._debug(response);try{const data=JSON.parse(response.responseText);if(Array.isArray(data)&&data.length>0){resolve(data[0])}else{resolve(null)}}catch(error){reject(new Error("Failed to parse Arm Haglund response"))}},onerror:()=>{reject(new Error("An error occurs while processing the request"))},ontimeout:()=>{reject(new Error("Request times out"))}})})}};
