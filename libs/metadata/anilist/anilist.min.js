// ==UserScript==
// @author       Journey Over
// @exclude      *
// ==UserLibrary==
// @name         @journeyover/anilist
// @description  AniList GraphQL API client
// @license      MIT
// @version      1.0.0
// @homepageURL  https://github.com/StylusThemes/Userscripts
// ==/UserLibrary==
// @connect      graphql.anilist.co
// @grant        GM.xmlHttpRequest
// ==/UserScript==

this.AniList=class{constructor(config={}){this._config={debug:config.debug||false};this._debug=response=>{if(this._config.debug||response.status!==200){console.log(`${response.status}: ${response.finalUrl}`)}}}query(query,variables={}){if(!query)throw new Error("A GraphQL query is required");return new Promise((resolve,reject)=>{GM.xmlHttpRequest({method:"POST",url:"https://graphql.anilist.co",headers:{"Content-Type":"application/json",Accept:"application/json"},data:JSON.stringify({query:query,variables:variables}),timeout:15e3,onload:response=>{this._debug(response);if(response.status===200){try{const data=JSON.parse(response.responseText);resolve(data)}catch(error){reject(new Error("Failed to parse AniList response"))}}else{reject(new Error(`AniList API error: ${response.status}`))}},onerror:()=>{reject(new Error("An error occurs while processing the request"))},ontimeout:()=>{reject(new Error("Request times out"))}})})}};
